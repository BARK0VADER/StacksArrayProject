#include <iostream>
#include <string>
#include <stack>
using namespace std;
//Stacks and Arrays Programming Project
//Alexandra Gutierrez & Wynter Horrigan

//Checking if stack is empty
bool empty(stack<int>& numbers)
    {
    return numbers.empty();
    }

//Function to push a number to the stack
void push(stack<int>& numbers)
{
    int temp;
    cout << "Enter a number between 0 and 99:" << endl;
    cin >> temp;
    
    if (temp >= 0 && temp <= 99)
    {
        numbers.push(temp);
    }
    else 
    {
        cout << "Input invalid. Please enter a number between 0 and 99." << endl;
    }
}

//Function to pop a number from the stack
void pop(stack<int>& numbers)
{
    if (empty(numbers))
    {
        cout << "Error: Underflow. Stack is empty." << endl;
    }
    else
    {
        numbers.pop();
    }
}

//Function to output the top element of the stack
void top(stack<int>& numbers)
{
    if (empty(numbers))
    {
        cout << "Error, stack is empty." << endl;
    }
    else
    {
        cout << "Top of stack: " << numbers.top() << endl;
    }
}

//Function to purge the stack (clear all elements)
void purge(stack<int>& numbers)
{
    while (!empty(numbers))
    {
        numbers.pop();
    }
    cout << "Stack is now empty." << endl;
}

//Function to search for an element in the array (for menu options)
int searchArray(string array[], int size, string element)
{
    for (int i = 0; i < size; i++)
    {
        if (array[i] == element)
        {
            return i;
        }
    }
    return -1;
}

int main() {
    stack<int> numbers;
    string myArray[] = {"A", "B", "C", "D", "E"};
    int size = sizeof(myArray) / sizeof(myArray[0]);
    int index;
    string myChoice;

    while (true) {
        //Menu
        cout << "\nStack Menu Prompt" << endl;
        cout << "Type A to push a number to the stack" << endl;
        cout << "Type B to pop a number from the stack" << endl;
        cout << "Type C to output the top of the stack" << endl;
        cout << "Type D to purge the stack" << endl;
        //Input from user for the Menu
        cin >> myChoice;

        index = searchArray(myArray, size, myChoice);

        //Output actions based on user input
        if (index == 0)
        {
            push(numbers);
        }
        else if (index == 1)
        {
            pop(numbers);
        }
        else if (index == 2)
        {
            top(numbers);
        }
        else if (index == 3)
        {
            purge(numbers);
        }
        else
        {
            cout << "Invalid choice. Please try again." << endl;
        }
    }

    return 0;
}
